{
  "version": 3,
  "sources": ["../../../../src/functions/verifyCertificate.ts", "../../../../src/utils/dynamodbClient.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\";\nimport { document } from \"../utils/dynamodbClient\";\n\ninterface IUserCertificate {\n  id: string;\n  name: string;\n  created_at: string;\n  grade: string;\n}\n\nexport const handler: APIGatewayProxyHandler = async (event) => {\n  const { id } = event.pathParameters;\n\n  const response = await document\n    .query({\n      TableName: \"users_certificate\",\n      KeyConditionExpression: \"id = :id\",\n      ExpressionAttributeValues: {\n        \":id\": id,\n      },\n    })\n    .promise();\n\n  const userCertificate = response.Items[0] as IUserCertificate;\n\n  if (userCertificate) {\n    return {\n      statusCode: 201,\n      body: JSON.stringify({\n        message: \"Certificado v\u00E1lido\",\n        name: userCertificate.name,\n        url: `https://certificateignite-yan.s3.sa-east-1.amazonaws.com/${id}.pdf`,\n      }),\n    };\n  }\n\n  return {\n    statusCode: 400,\n    body: JSON.stringify({\n      message: \"Certificado inv\u00E1lido\",\n    }),\n  };\n};\n", "import { DynamoDB } from \"aws-sdk\";\n\nconst options = {\n  region: \"localhost\",\n  endpoint: \"http://localhost:8000/\",\n  accessKeyId: \"x\",\n  secretAccessKey: \"x\",\n};\n\nconst isOffline = () => {\n  return process.env.IS_OFFLINE;\n};\n\nexport const document = isOffline()\n  ? new DynamoDB.DocumentClient(options)\n  : new DynamoDB.DocumentClient();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACd,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AAAA,EACb,iBAAiB;AACnB;AAEA,IAAM,YAAY,MAAM;AACtB,SAAO,QAAQ,IAAI;AACrB;AAEO,IAAM,WAAW,UAAU,IAC9B,IAAI,wBAAS,eAAe,OAAO,IACnC,IAAI,wBAAS,eAAe;;;ADLzB,IAAM,UAAkC,OAAO,UAAU;AAC9D,QAAM,EAAE,OAAO,MAAM;AAErB,QAAM,WAAW,MAAM,SACpB,MAAM;AAAA,IACL,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,2BAA2B;AAAA,MACzB,OAAO;AAAA,IACT;AAAA,EACF,CAAC,EACA,QAAQ;AAEX,QAAM,kBAAkB,SAAS,MAAM;AAEvC,MAAI,iBAAiB;AACnB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,MAAM,gBAAgB;AAAA,QACtB,KAAK,4DAA4D;AAAA,MACnE,CAAC;AAAA,IACH;AAAA,EACF;AAEA,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACnB,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACF;",
  "names": []
}
